{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","_ref","post","data","markdownRemark","html","_post$frontmatter","frontmatter","author","categories","date","path","console","log","CategoriesList","map","cat","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","key","className","href","_components_layout__WEBPACK_IMPORTED_MODULE_2__","title","dangerouslySetInnerHTML","__html","rel","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","Header","siteTitle","core_browser_esm","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","ti","defaultProps","Layout","gatsby_browser_entry","react_default","a","Fragment","header","site","siteMetadata","paddingTop","fontSize","marginTop","Date","getFullYear","_755544856","node"],"mappings":"gKAIeA,EAAA,iBAAAC,GAAc,IACrBC,EADqBD,EAAXE,KACEC,eAEhBC,EAEEH,EAFFG,KAHyBC,EAKvBJ,EADFK,YAAeC,EAJUF,EAIVE,OAAQC,EAJEH,EAIFG,WAAYC,EAJVJ,EAIUI,KAAMC,EAJhBL,EAIgBK,KAE3CC,QAAQC,IAAIJ,GACZ,IAAMK,EAAiBL,EAAWM,IAAI,SAAAC,GACpC,OACEC,OAAAC,EAAA,EAAAD,CAAA,MAAIE,IAAKH,GACPC,OAAAC,EAAA,EAAAD,CAAA,KAAGG,UAAU,aAAaC,KAAK,UAC5BL,MAKT,OACEC,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,KACEL,OAAAC,EAAA,EAAAD,CAAA,WAASG,UAAU,WACjBH,OAAAC,EAAA,EAAAD,CAAA,UAAKf,EAAKK,YAAYgB,OACtBN,OAAAC,EAAA,EAAAD,CAAA,OAAKG,UAAU,YAAYI,wBAAyB,CAAEC,OAAQpB,KAC9DY,OAAAC,EAAA,EAAAD,CAAA,cACK,IACHA,OAAAC,EAAA,EAAAD,CAAA,KAAGS,IAAI,SAASN,UAAU,kBAAkBC,KAAK,UAC9Cb,IAGLS,OAAAC,EAAA,EAAAD,CAAA,KAAGG,UAAU,QAAQC,KAAI,GAAKV,GAA9B,aACYM,OAAAC,EAAA,EAAAD,CAAA,QAAMG,UAAU,gBAAgBV,IAE5CO,OAAAC,EAAA,EAAAD,CAAA,UAAKH,MAMN,IAAMa,EAAK,kCCxClB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6KCYzCK,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBpB,OAAAC,EAAA,EAAAD,CAACgB,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMlC,MACLoC,EAAgBF,EAAMV,QAAUY,EAAgBF,EAAMV,OAAOxB,MAEtDkC,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMlC,KAAOkC,EAAMlC,KAAKA,KAAOoC,EAAgBF,EAAMV,OAAOxB,MAGvDc,OAAAC,EAAA,EAAAD,CAAA,uCA4BfmB,EAAYM,UAAY,CACtBvC,KAAMwC,IAAUC,OAChBjB,MAAOgB,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,uLCnDhBC,EAAmB,SAAA/C,GAAkB,IAAfgD,EAAehD,EAAfgD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOnB,IAAMoB,cAAcC,IAApBtC,OAAAuC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE,oHChBTW,EAAS,SAAA1D,GAAA,IAAG2D,EAAH3D,EAAG2D,UAAH,OACb3C,OAAA4C,EAAA,EAAA5C,CAAA,UACE6C,MAAO,CACLC,WAAU,UACVC,aAAY,YAGd/C,OAAA4C,EAAA,EAAA5C,CAAA,OACE6C,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTlD,OAAA4C,EAAA,EAAA5C,CAAA,MAAI6C,MAAO,CAAEG,OAAQ,IACnBhD,OAAA4C,EAAA,EAAA5C,CAAA,KACEG,UAAU,SACVM,IAAI,KACJL,KAAK,iCACLyC,MAAO,CACLM,MAAK,UACLC,eAAc,SAGfT,GAEH3C,OAAA4C,EAAA,EAAA5C,CAAA,KAAGI,KAAK,4BAA4BK,IAAI,MACtCT,OAAA4C,EAAA,EAAA5C,CAACqD,EAAA,EAAD,CAAgBF,MAAM,iBAOhCT,EAAOjB,UAAY,CACjBkB,UAAWjB,IAAUE,QAGvBc,EAAOY,aAAe,CACpBX,UAAS,IAGID,QCxBTa,UAAS,SAAAvE,GAAA,IAAGwC,EAAHxC,EAAGwC,SAAH,OACbxB,OAAA4C,EAAA,EAAA5C,CAACwD,EAAA,EAAD,CACE9C,MAAK,YASLa,OAAQ,SAAArC,GAAI,OACVc,OAAA4C,EAAA,EAAA5C,CAAAyD,EAAAC,EAAAC,SAAA,KACE3D,OAAA4C,EAAA,EAAA5C,CAAC4D,EAAD,CAAQjB,UAAWzD,EAAK2E,KAAKC,aAAaxD,QAC1CN,OAAA4C,EAAA,EAAA5C,CAAA,OACE6C,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPa,WAAY,IAGd/D,OAAA4C,EAAA,EAAA5C,CAAA,YAAOwB,GACPxB,OAAA4C,EAAA,EAAA5C,CAAA,UAAQ6C,MAAO,CAACmB,SAAU,OAAQC,UAAW,SAA7C,MACK,IAAIC,MAAOC,cADhB,mBAGEnE,OAAA4C,EAAA,EAAA5C,CAAA,KAAGI,KAAK,4BAAR,cAzBVlB,KAAAkF,MAiCFb,EAAO9B,UAAY,CACjBD,SAAUE,IAAU2C,KAAKxC,YAGZ0B","file":"component---src-templates-blog-post-js-64782c31b9ed9a8d4b47.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  const {\n    html,\n    frontmatter: { author, categories, date, path },\n  } = post;\n  console.log(categories);\n  const CategoriesList = categories.map(cat => {\n    return (\n      <li key={cat}>\n        <a className=\"p-category\" href=\"/about\">\n          {cat}\n        </a>\n      </li>\n    );\n  });\n  return (\n    <Layout>\n      <article className=\"h-entry\">\n        <h1>{post.frontmatter.title}</h1>\n        <div className=\"e-content\" dangerouslySetInnerHTML={{ __html: html }} />\n        <p>\n          by{\" \"}\n          <a rel=\"author\" className=\"p-author h-card\" href=\"/about\">\n            {author}\n          </a>\n        </p>\n        <a className=\"u-url\" href={`${path}`}>\n          Published <time className=\"dt-published\">{date}</time>\n        </a>\n        <ul>{CategoriesList}</ul>\n      </article>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        author\n        categories\n        date(formatString: \"MMMM DD, YYYY hh:mm\")\n        path\n        title\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { TiSocialGithub } from \"react-icons/ti\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#edddd4`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <a\n          className=\"h-card\"\n          rel=\"me\"\n          href=\"http://www.whatsnextforkev.in/\"\n          style={{\n            color: `#197278`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </a>\n        <a href=\"https://github.com/kevdez\" rel=\"me\">\n          <TiSocialGithub color=\"#283d3b\" />\n        </a>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\n/**\n * my color scheme:\n * #283d3b\n * #197278\n * #edddd4\n * #c44536\n * #772e25\n */\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer style={{fontSize: \"10px\", marginTop: \"30px\"}}>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}