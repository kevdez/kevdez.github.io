{"version":3,"sources":["webpack:///./src/components/post-link.jsx","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["PostLink","_ref","className","post","Object","core_browser_esm","style","marginBottom","gatsby_browser_entry","to","frontmatter","path","title","date","IndexPage","edges","data","allMarkdownRemark","console","log","Posts","filter","edge","_edge$node$frontmatte","node","includes","map","post_link","key","id","layout","seo","keywords","href","pageQuery","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","StyledHeader","styled_base_browser_esm","target","name","styles","StyledDiv","StyledH1","IconContainer","IconLink","Header","siteTitle","rel","ti","size","color","defaultProps","ContentDiv","Footer","LayoutContainer","Layout","header","site","siteMetadata","Date","getFullYear","_755544856","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","link","content","property","author","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-13d85102add2c57cf990.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst PostLink = ({ className, post }) => (\n  <div style={{marginBottom: \"4px\"}}>\n    - <Link className={className} to={post.frontmatter.path}>\n      {post.frontmatter.title} (<time className=\"dt-published\">{post.frontmatter.date}</time>)\n    </Link>\n  </div>\n);\n\nexport default PostLink;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport PostLink from \"../components/post-link\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  console.log(\"edges:\", edges);\n  const Posts = edges\n    .filter(edge => {\n      const {date, path} = edge.node.frontmatter;\n      const isNotWebmention = p => !p.includes(\"webmentions\");\n      return !!date && isNotWebmention(path);\n    }) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\n  return (\n    <Layout>\n      <SEO\n        title=\"What's next for Kevin?\"\n        keywords={[\n          \"whatsnextforkev.in\",\n          \"application\",\n          \"indieweb\",\n          \"Kevin\",\n          \"react\",\n          \"kevdez\",\n        ]}\n      />\n      <article className=\"h-entry\">\n        <div className=\"e-content p-name\">\n          <p>Welcome.</p>\n          <p>\n            This is the first blog of my own where I have full control over all\n            the content. As the site improves, I'll be targeting the direction\n            of this site for good Search Engine Optimization (\n            <a href=\"https://en.wikipedia.org/wiki/Search_engine_optimization\">\n              SEO\n            </a>\n            ), web{\" \"}\n            <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility\">\n              accessibility\n            </a>\n            , and <a href=\"https://indieweb.org/\">IndieWeb</a> practices. Let's\n            hope I'm doing things correctly.\n          </p>\n          <p>\n            This site is built with{\" \"}\n            <a href=\"https://www.gatsbyjs.org/\">Gatsby</a> as a static site,\n            hosted on <a href=\"https://pages.github.com/\">GitHub Pages</a>. I\n            specifically went for a zero dollar website.\n          </p>\n          <p>\n            Expect things to move around oftenâ€”the site is under heavy\n            construction.\n          </p>\n        </div>\n      </article>\n      <h4>Here are some recent blog posts:</h4>\n      <div>{Posts}</div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { TiSocialGithub, TiSocialLinkedin } from \"react-icons/ti\";\n\nconst StyledHeader = styled.header`\n  background-color: #c44536;\n  margin-bottom: 1.45rem;\n`;\n\nconst StyledDiv = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1.45rem 1.0875rem;\n  display: flex;\n  height: 70px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledH1 = styled.h1`\n  margin: 0;\n  height: 28px;\n  font-size: 28px;\n  & a {\n    color: #283d3b;\n    &:hover {\n      color: #197278;\n    }\n  }\n`;\nconst IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst IconLink = styled.a`\n  display: flex;\n  align-items: center;\n  margin-left: 15px;\n`;\n\nconst Header = ({ siteTitle }) => (\n  <StyledHeader>\n    <StyledDiv>\n      <StyledH1>\n        <a className=\"h-card\" rel=\"me\" href=\"http://www.whatsnextforkev.in/\">\n          {siteTitle}\n        </a>\n      </StyledH1>\n      <IconContainer>\n      <IconLink href=\"https://github.com/kevdez\" rel=\"me\">\n        <TiSocialGithub size=\"26\" color=\"#283d3b\" />\n      </IconLink>\n      <IconLink href=\"https://www.linkedin.com/in/kevdez/\">\n        <TiSocialLinkedin size=\"26\" color=\"#283d3b\" />\n      </IconLink>\n      </IconContainer>\n    </StyledDiv>\n  </StyledHeader>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\n\n/**\n * my color scheme:\n * #283d3b gunmetal\n * #197278 skobeloff\n * #edddd4 champagne pink\n * #c44536 madder lake\n * #772e25 liver(organ)\n */\n\nconst ContentDiv = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0px 1.0875rem 1.45rem;\n  padding-top: 0;\n  color: #197278;\n  & a {\n    color: #c44536;\n    &:hover {\n      color: #772e25;\n    }\n  }\n`;\n\nconst Footer = styled.footer`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0px 1.0875rem 1.45rem;\n  font-size: 11px;\n  margin-top: 40px;\n`;\n\nconst LayoutContainer = styled.div`\n  background-color: #edddd4;\n  min-height: 100vh;\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <LayoutContainer>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <ContentDiv>\n          <main>{children}</main>\n        </ContentDiv>\n        <Footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </Footer>\n      </LayoutContainer>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      link={[\n        {\n          rel: \"webmention\",\n          href: \"https://webmention.io/www.whatsnextforkev.in/webmention\",\n        },\n        {\n          rel: \"pingback\",\n          href: \"https://webmention.io/www.whatsnextforkev.in/xmlrpc\",\n        },\n      ]}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}